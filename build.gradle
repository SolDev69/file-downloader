plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group 'oct.maps'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'downloader.downloadfiles'
    mainClass = 'downloader.downloadfiles.DownloaderApp'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

// Create a fat (executable) JAR
jar {
    manifest {
        attributes 'Main-Class': 'downloader.downloadfiles.DownloaderApp'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Ensure the jar task runs on build
build.dependsOn(jar)

test {
    useJUnitPlatform()
}

// Custom tasks for different download types
task downloadNWTB(type: JavaExec) {
    group = 'downloads'
    description = 'Download NWTB maps'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'downloader.downloadfiles.DownloaderApp'
    args 'NWTB'
}

task downloadCurrent(type: JavaExec) {
    group = 'downloads'
    description = 'Download current maps'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'downloader.downloadfiles.DownloaderApp'
    args 'current'
}

task downloadOlder(type: JavaExec) {
    group = 'downloads'
    description = 'Download older maps'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'downloader.downloadfiles.DownloaderApp'
    args 'old'
}

// Custom task for downloading all maps
task downloadAll(type: JavaExec) {
    group = 'downloads'
    description = 'Download all maps (NWTB, current, older)'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'downloader.downloadfiles.DownloaderApp'
    args 'all'
}
